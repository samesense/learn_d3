<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
   <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
    <style>
    .axis {
        font-family: arial;
        font-size:1em;
    }
    path {
        fill:none;
        stroke:black;
        stroke-width:2px;
    }
    .tick {
        fill:none;
        stroke:black;
    }
    circle{
        stroke:black;
        stroke-width:0.5px;
    }
    circle.on2off_higher{
        fill:Orange;
    }
    circle.on2off_early{
        fill:Blue;
    }
    circle.off2on_early{
        fill:green;
    }
    circle.off2on_higher{
        fill:Red;
    }
    circle.off2on_lower{
        fill:Purple;
    }

    circle.on2off{
        fill:DeepPink;
    }
    circle.off2on{
        fill:MediumSeaGreen;
    }
    
    circle.on2off.extremeFalse{
        opacity:0.2;
        
    }
    circle.on2off.extremeTrue{
        fill:Red;
        opacity:1;
    }
    circle.off2on.extremeFalse{
        opacity:0.2;
    }
    circle.off2on.extremeTrue{
        fill:'Green'
        opacity:1;
    }

    path.times_square{
        stroke:Black;
    }
    path.grand_central{
        stroke:MediumSeaGreen;
    }
    
    </style>
    <script>
    function draw(data) {
        "use strict";
        var margin = 100,
            width = 1100 - margin,
            height = 700 - margin;
        
        var expression_extent = d3.extent(data,
            function(d){return d.expression}
        );

        var freq_extent = d3.extent(data,
            function(d){return d.mut_freq}
        )

        var freq_scale = d3.scale.linear()
                           .domain([-.001,.01])
                           .range([height, margin])
        
        var expression_scale = d3.scale.linear()
                                 .domain([0,100])
                                 .range([margin, width]);
        
<!--         var freq_scale = d3.scale.linear() -->
<!-- .domain([0,.015]) -->
<!-- //            .domain(freq_extent) -->
<!--             .range([margin, width]) -->
        
        var freq_axis = d3.svg.axis()
                          .scale(freq_scale)
                          .orient('left')

        var expression_axis = d3.svg.axis()
            .scale(expression_scale)
        
        var line = d3.svg.line()
            .x(function(d){return expression_scale(d.x)})
            .y(function(d){return freq_scale(d.y)})
            .interpolate("linear")
                    
        d3.select("body") 
          .append("svg")
            .attr("class","chart") 
            .attr("width", width+margin)
            .attr("height", height+margin)
        
        d3.select('svg')
          .append('path')
            .attr('d', line(data.upper_path))
            .attr('class', 'times_square')

        d3.select('svg')
          .append('path')
            .attr('d', line(data.lower_path))
            .attr('class', 'times_square')
        
        d3.select("svg")
          .selectAll("circle")
          .data(data.points)
          .enter()
          .append("circle")
          .attr("class", function(d){return d.gene_set;})
          <!-- .attr("class", function(d){return d.gene_set + ' extreme' + d.extreme_gene;}) -->
	  <!-- .attr('id', function(d){return d.gene;}) -->
	  <!-- .attr('freq', function(d){return d.mut_freq;}) -->
	  <!-- .attr('expression', function(d){return d.expression;}) -->

          d3.selectAll("circle")
            .attr("cy", function(d){return freq_scale(d.mut_freq);})
            .attr("cx", function(d){return expression_scale(d.expression);})
            .attr("r", 3)
            .on('mouseover.tooltip', function(d){
if(d.extreme_gene == 'True') {
console.log(d.gene);
console.log(d.mut_freq);
console.log(d.expression);
console.log(d.extreme_gene);
                // here the class text and d.line_id are selected
                //d3.select("text." + d.gene).remove()
                d3.select('svg')
                    .append('text')
                    .text(d.gene)
                    .attr('x', expression_scale(d.expression))
                    .attr('y', freq_scale(d.mut_freq))
                    .attr('class', d.gene)
//.style('stroke','#996633')
.style('font-size','12px')
.style('font-weight','bold')
.style('fill','blue')
            } })
            .on('mouseout.tooltip', function(d){ if (d.extreme_gene == 'True') {
                d3.select("text." + d.gene)
                    .transition()
                    .duration(500)
                    .style('opacity',0)
                    .attr('transform','translate(.0001, -10)')
                    .remove()
            } })

        d3.select('svg')
          .append('circle')
          .attr('cx', width-margin)
          .attr('cy', 2*margin)
	  .attr('r', '10px')
          .style('fill','orange')            
	d3.select('svg')
	  .append('text')
	  .text('Down-regulated; lower expression in past')
	  .attr('x',width-margin+15)
	  .attr('y',2*margin+6)
	  .style('font-size','20px')
	  .style('font-weight','bold')
	  .style('fill','Orange')

        d3.select('svg')
          .append('circle')
          .attr('cx', width-margin)
          .attr('cy', 2*margin+25)
	  .attr('r', '10px')
          .style('fill','Red')            
	d3.select('svg')
	  .append('text')
	  .text('Up-regulated late')
	  .attr('x',width-margin+15)
	  .attr('y',2*margin+6+25)
	  .style('font-size','20px')
	  .style('font-weight','bold')
	  .style('fill','Red')

        d3.select('svg')
          .append('circle')
          .attr('cx', width-margin)
          .attr('cy', 2*margin+50)
	  .attr('r', '10px')
          .style('fill','green')            
	d3.select('svg')
	  .append('text')
	  .text('Up-regulated early')
	  .attr('x',width-margin+15)
	  .attr('y',2*margin+6+50)
	  .style('font-size','20px')
	  .style('font-weight','bold')
	  .style('fill','green')

	d3.select('svg')
          .append('circle')
          .attr('cx', width-margin)
          .attr('cy', 2*margin+75)
	  .attr('r', '10px')
          .style('fill','blue')            
	d3.select('svg')
	  .append('text')
	  .text('Down-regulated early')
	  .attr('x',width-margin+15)
	  .attr('y',2*margin+6+75)
	  .style('font-size','20px')
	  .style('font-weight','bold')
	  .style('fill','blue')

	d3.select('svg')
          .append('circle')
          .attr('cx', width-margin)
          .attr('cy', 2*margin+100)
	  .attr('r', '10px')
          .style('fill','purple')            
	d3.select('svg')
	  .append('text')
	  .text('Up-regulated; higher in the past')
	  .attr('x',width-margin+15)
	  .attr('y',2*margin+6+100)
	  .style('font-size','20px')
	  .style('font-weight','bold')
	  .style('fill','purple')


        d3.select("svg")
          .append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(expression_axis);
         
        d3.select("svg")
          .append("g")
          .attr("class", "y axis")
          .attr("transform", "translate(" + margin + ",0)")
          .call(freq_axis);
    
      d3.select('.y.axis')
          .append('text')
          .text('Mutation Frequency')
          .attr('transform', "rotate (90, " + -margin + ", 0)")
          .attr('x', 120)
          .attr('y', -10)
                    
      d3.select('.x.axis')
        .append('text')
          .text('RNA-Seq Expression')
          .attr('x', function(){return (width / 2) - margin})
          .attr('y', margin/1.25)    
    }
    
    </script>
</head>
<body>
    <script>
        d3.json('data/rnaseq_mutFreq.Sep18.primary_cut.json', draw);
    </script>
</body>
</html>
